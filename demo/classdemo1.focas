include iostream

interface ICalc =>
    public func Calclation(a : int, b : int) : int end
    public des ICalc() end
end

class Plus : ICalc =>
    public func Calclation(a : int, b : int) : int =>
        return a + b
    end

    public des Plus() =>
        neitive => "std::cout << $PlusDestructor$ << std::endl;" end
    end
end

class Minus : ICalc =>
    public func Calclation(a : int, b : int) : int =>
        return a - b
    end

    public des Minus() =>
        neitive => "std::cout << $MinusDestructor$ << std::endl;" end
    end
end

func main() : int =>
    let calc1 : ref ICalc => new Plus()
    let calc2 : ref ICalc => new Minus()
    let result : int => ref calc2.Calclation(ref calc1.Calclation(3, 5), 4)
    neitive => "std::cout << result << std::endl;" end
end
